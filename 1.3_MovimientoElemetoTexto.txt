                ** Movimiento parte 2: moverse por objetos **

Vim reconoce de forma especial algunas secuencias de texto (palabras,
párrafos, etc) mediante una serie de reglas sencillas. Los movimientos
por objetos son aquellos que se mueven entre dichas secuencias
reconocidas por vim.

Los movimientos por objetos son generalmente 'no inclusivos', lo cual
es relevante al usarlos con operadores.

======================================================================

Movimiento por sentencias:
                ↱
            '(' ←   → ')'
                    ↲

Las sentencias en vim son similares a sentencias gramaticales. La
definición de 'sentencia' se puede cambiar dependiendo del tipo de
archivo que se esté editando.

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 1: Elimina la sentencia 'Dolor explicabo' del siguiente
párrafo
    Adipisicing facilis magni esse quasi?
    Dolor cumque. Amet error aspernatur
    Sit ducimus autem deleniti accusamus.
    Officia alias perferendis
    Consectetur nemo obcaecati provident qui.
                                                    Operador eliminar => d

Respuesta sugerida (Abrir con 'zo' y cerrar con 'zc') {{{
    Presionando ')' repetidas veces llegue a la "D" de "Dolor". Presione
    'd)' para eliminar de manera no inclusiva desde la posición actual
    hasta el inicio de la siguiente sentencia.
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

===========================================================================

Movimiento de párrafos:
            '{' ↑   ↓ '}'*

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 2: Elimine el segundo párrafo
    Amet saepe asperiores odio hic
    Ipsum doloremque magnam accusamus perferendis.
    Consectetur numquam qui itaque reprehenderit
    Adipisicing inventore adipisci praesentium animi.
    Adipisicing magnam dolore quod eveniet

    Sit tempora aliquam voluptatum eos?
    Ipsum libero illum at voluptatum
    Amet libero tempora laboriosam ullam.
    Amet eum magnam nulla architecto.
    Consectetur sit ad explicabo porro

    Elit rerum suscipit voluptatum blanditiis
    Sit asperiores unde saepe expedita.
    Elit aperiam quod neque impedit?
    Amet dolore necessitatibus cumque ipsa.
    Adipisicing dolor veritatis repellat illum
                                                    Operador eliminar => d

Respuesta sugerida (Abrir con 'za') {{{
    Posicionado en la linea vacía de arriba presione 'd}' o posicionado
    en la de abajo presione 'd{'
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

===========================================================================

Movimiento por secciones:
         [[  ][     ]]  []
       ↑ -------- -------- ↓

La definición de sección es la que más cambia según el tipo de archivo
en que se esté trabajando. Por defecto la sección se corresponde con una
llave de apertura y una de cierre al principio de línea

Los comandos '[[' y ']]' sirven para moverse al inicio de sección anterior
y siguiente respectivamente. Los comandos ']['y '[]' hacen lo respectivo
con el final de sección

int funcion1()
{

    if (...)
    {

    }

}

int funcion2()
{   // [[, ]]

    while (...)
    {

    }

}   // ][, []

int funcion3()
{   // [[, ]]

    for (...; ...; ...)
    {

    }


}   // ][, []

int funcion4()
{

    switch (...)
    {
    case ...:

        break;
    default:

        break;
    }

}

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 3: (Abrir con 'gf')
    1.3_Ejercicio3.c
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

___________________________________________________________________________

<----Archivo anterior                                Archivo siguiente---->
  :prev[ious]                                                     :n[ext]

vim: fdm=marker
