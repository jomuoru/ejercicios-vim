                        ** Comenzando a moverse **

Nuevamente, el movimiento básico se hace mediante hjkl
                             k
                             ↑
                        h  ←   →  l
                             ↓
                             j

Ejercicio 1: Camine a través del laberinto usando las teclas de vim
       Inicio
         ↓↓
       →    ←
        *  ****************************
        *  *******           **********
        *  *******  *******  **********
        *        *  *     *  **       *
        *******  *  *  *  *  **  ***  *
        *        *     *  *  **  ***  *
        *  *************  *      ***  *
        *  *              **********  *
        *  *  *************           *
        *  *            ***  **********
        *  ***********  ***  **********  ↓  M
        *               ***               ← e
        *******************************  ↑  t
                                            a

Por defecto, los comandos 'h' y 'l' se detienen en los extremos
sin cambiar de línea como lo haría un editor tradicional.
Dicho comportamiento se puede cambiar modificando la opción whichwrap de
la siguiente forma.
        :set whichwrap+=h,l
o abreviando:
        :se ww+=h,l

Ejercicio 2: Establecer la opción anterior y usarla para recorrer el
segundo laberinto.

 ↓
  
| ********|
|    |    |
|*** | ** |
|***   **  
  *********
|         |
********* |
          
         ↑

Puede regresar al comportamiento original de las teclas con alguno de los
siguientes:
        Quitar 'h' y 'l' de la lista separada por comas
            :set whichwrap-=h,l
            :se ww-=h,l
        Regresar la opción 'whichwrap' a su estado por defecto
            :set whichwrap&
            :se ww&

Si le gusta una opción la puede establecer de forma permanente en el
archivo configuración (suele ser ~/.vimrc). Si dicho archivo 
no existe basta con crearlo.
Puede añadir lineas al archivo desde dentro de vim de la siguiente
forma:
    :!echo set whichwrap+=h,l >> .vimrc

Ejercicio 3: Activar la opción booleana 'relativenumber' y usarla para
eliminar las líneas marcadas con '>>>>'. Después se puede desactivar
la opción.
    Ipsum quidem architecto sunt consequuntur voluptatem. Dicta laboriosam?
    Elit rem labore qui hic dolorum? Quos laboriosam?
    Lorem repellat fugiat dolor distinctio inventore? Omnis ipsa?
    Dolor dolorum reprehenderit minus perferendis aliquid. Consequatur quaerat
    Amet accusantium ducimus repudiandae id perferendis minus? Vitae
    >>>>
    Lorem doloremque eveniet nobis quo ipsum fugit, placeat.
    Amet distinctio cupiditate suscipit ad eos? Saepe voluptatem
    Ipsum ad eaque rerum hic nam Amet optio!
    Adipisicing reiciendis aperiam sit ullam unde totam Cupiditate
    Ipsum voluptatum consectetur optio quos cupiditate? Facere eius
    Consectetur fugit unde provident quam nulla nesciunt. In?
    >>>>
    Adipisicing omnis ipsa laboriosam rerum omnis? Vel repudiandae.
    Adipisicing nostrum assumenda nisi impedit aperiam Numquam voluptas!
    Elit possimus voluptatem ad eveniet sunt, quam consequuntur
    >>>>
    Consectetur unde veniam tempora cum obcaecati. Sunt omnis
    Consectetur harum quis officiis impedit eum exercitationem. Quos.
    Adipisicing tempora porro distinctio inventore deserunt! Nulla alias.
                                                    Operador eliminar => d
                                                    Aplicar a la línea => _
Respuesta sugerida (Abrir o cerrar 'za') {{{
    Muchas de las opciones de configuración de vim son booleanas así que
    primero hay que ver como funcionan. Las opciones booleanas se activan
    directamente con su nombre. Si una opción se llamase 'lorem', se activa con:
        :set lorem
    Y se desactiva añadiendo la palabra 'no' al nombre de la opción:
        :set nolorem
    También suele haber abreviaciones para cada opción. En el caso de
    'relativenumer', la activación se puede hacer mediante:
        :set relativenumber | :se rnu
            (Cualquiera de los dos)
    Y se puede desactivar posterioremente con:
        :set norelativenumber | :set nornu

    Una vez active relativenumber podrá ver las distancias de cada línea
    relativas a su posición actual lo cual nos indicará el prefijo numérico
    para saltar de manera directa a cierta línea. Si una línea, por ejemplo,
    se encuentra 4 líneas por encima de usted, puede alcanzarla escribiendo
    '4k'.
    Habiendo llegado a las líneas marcadas con '>>>>' usando el método
    anterior las eliminará con 'd_'. Luego salte a la próxima línea y
    repita con '.'
}}}

===========================================================================

Para moverse entre palabras puede usar w, b, e, ge. A diferencia de
del movimiento por letras, el movimiento por palabras te cambia de línea
por defecto cuando llegas al final o al principio de una.

        ↱ b  ge     w   e
       ← -------- -------- →
                          ↲

Los comandos b y w dan saltos a los inicios de las palabras mientras que
los comandos ge y e dan saltos a los finales de las palabras,
hacia atrás y hacia adelante respectivamente.

       Palabra0     Palabra1    Palabra2    Palabra3
                    ^      ^    ^      ^
                    |      |    |      |
                   w,b   e,ge  w,b    e,ge

Ejercicio 4: Llega a todos los sitios marcados por un '|'
    Consectetur qui expedita | laborum doloremque
    Adipisicing facilis | consectetur dolorem doloribus
    Ipsum dignissimos accusantium eos illum
    Dolor | exercitationem quae voluptatem | deleniti
    Lorem dolorem unde illum amet!

Respuesta sugerida (Abrir o cerrar 'za') {{{
    Por defecto se recomienda usar 'w' y 'b' para moverse por palabras
    a menos que requiera llegar al final de alguna pero en este ejercicio
    funcionará también 'e' y 'ge'.
}}}

Ejercicio 5: Cambie los adjetivos del siguiente texto por adverbios
añadiendo el sufijo "mente"
    Fuerte suspiró. La abrazó temblorosa.
    Paró en seco, enorme asustado.
    Gritó firme a la persona frente de si.
                                                    Insertar enfrente => a
Respuesta sugerida (Abrir o cerrar 'za') {{{
    No existe un comando "insertar al final de la palabra" así que se
    deberán usar dos comandos.
    Posicionese "Fuerte" que es el primer adjetivo y presione 'eamente<Esc>'.
    Esto añade "mente" a la palabra mediante dos comandos:
        - El comando simple 'e' que se mueve al final de la palabra
        - El comando compuesto 'a°Texto°<Esc>' que escribe °Texto° (en este
          caso 'mente') en la posición de enfrente del cursor.
    Únicamente el segundo comando se registrará y será repetible dado que
    el primero es un comando de movimiento, no de edición. Como consecuencia
    será importante la posición en la que de encuentres sobre los verbos.
    Muévete al final de cada palabra en cuestión y repite la inserción de
    "mente" con '.'.
}}}

Nota: La definición de "palabra" puede ser alterada, véase
1.6_Ejercicio5.css para un ejemplo.

===========================================================================

Aunque extraña, la forma más eficiente de moverse en una línea es usando la
búsqueda de caracteres.
La letra 'f' seguida de un carácter te mueve a la siguiente aparición de
dicho carácter y la letra 'F' mueve a la aparición anterior. Las letras 't' y
'T' hacen prácticamente lo mismo, pero avanzan un carácter menos.

      ↱  ,                                      ,  ↰
      ⬑ ←    ;  ←  T{char} ←   → t{char}  →  ;    →⬏
      ⬐ ←    ;  ←  F{char} ←   → f{char}  →  ;    →⬎
      ↳  ,                                      ,  ↲

Una vez realizada una búsqueda por caracteres, dicha búsqueda se puede
repetir usando el carácter ';' (punto y coma). 
La ',' hace la misma búsqueda en dirección contraria.

Ejercicio 6: Cambie todas las apariciones de punto con coma
    Dolor voluptatibus. accusamus facere. labore quia.
    .Consectetur. numquam labore. consequuntur alias aspernatur
    Ipsum dolor ut sunt. molestiae esse!
    Dolor. ducimus dignissimos. ipsam temporibus animi.
    .Amet blanditiis. quo incidunt qui nobis.
                                                    Insertar enfrente => a

Respuesta sugerida (Abrir o cerrar 'za') {{{
    Al principio de la primera línea presione 'f.' para llegar a la primera
    aparición de punto y use 'a<Del>,<Esc>' (<Del> es la tecla de borrar).
    Eso registrará dos tipos de comandos repetibles: La búsqueda de
    carácter repetible con ';'/',' y el cambio de un símbolo cualquiera por ","
    que se puede repetir con '.' como todas las ediciones.
    Llega al siguiente punto con ';' y repita la edición con '.'. Una vez
    terminada la línea actual muévete a la siguiente, donde es probable que
    los símbolos que busca hayan quedado detrás de la posición del cursor.
    Para repetir la búsqueda en dirección contraría presione ',' y nuevamente
    repite la edición con '.'.
    Siga usando la misma lógica hasta terminar.
}}}

Ejercicio 7: Elimine las comas y ponga cada número en una línea distinta
    102,25,4096,-10,22.5,55,999,123123,2

    Opción recomendada para el ejercicio: 'autoindent' 'ai' (es opción booleana)

Respuesta sugerida (Abrir o cerrar 'za') {{{
    Con el cursor posicionado antes de la primera coma teclee
    'f,' que buscará la primera aparición de ',' y 'a<Del><Return><Esc>' que
    borrara dicha coma y dará un salto de línea. Puede repetir la búsqueda
    con ';' y repetir la edición con '.' hasta finalizar con los elementos.
}}}

Ejercicio 8: (Abrir con 'gf')

    1.2_Ejercicio8.java

Por último, es posible moverse entre el principio y el final de una línea
a partir de varios comandos.
Los comandos '0' y '$' permiten moverse entre el inicio y el final absolutos.
Los comandos '^' y 'g_' se mueven al primer y último carácter visible
respectivamente.

                  0  ←  ^  ←   →  g_  →  $

Ejercicio 9: Pruebe las diferencias entre '0' y '^' así como entre 'g_' y '$'
en la siguiente línea

    Dolor voluptatibus accusamus facere labore quia.        

Ejercicio 10: Arregle el siguiente recuadro para que se vea regular
+----------------------------------------------------------------+
*                  ============================                  |
|                  $                          $                  *
                   *                          $                  |
|                  $                          *                   
                   *                          $                  |
|                  $                          $                  *
*                  ============================                  |
+----------------------------------------------------------------+
                                                Reemplazar carácter => r{char}

Respuesta sugerida (Abrir o cerrar 'za') {{{
    Por motivos de práctica se sugiere empezar de adentro hacía afuera
    y de línea en línea (Aunque en realidad no sea eficiente) probando los
    movimientos recién vistos para moverse a las posiciones requeridas.
    Para sustituir un solo carácter se puede usar 'a<Del>{Char}<Esc>' como
    vimos anteriormente o simplemente 'r{Char}' que es un comando muy simple
    que te permite permanecer en modo normal todo el tiempo.
}}}
___________________________________________________________________________
https://vim-adventures.com  Página que sabe La mejor forma de memorizar
                            los comandos: jugando

vim: fdm=marker
