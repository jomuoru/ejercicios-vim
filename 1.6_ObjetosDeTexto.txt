                    ** Objetos de texto **

Los objetos de texto son a los operadores como los sustantivos son a
los verbos.

Al usar objetos de texto siempre se precede alguna de las siguientes letras:
    i => "Inside" El objeto sin elementos circundantes
    a => "Around" El objeto más sus elementos circundantes

La sintaxis completa es:
    {operador}(a|i){objeto de texto}

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 1: Probar las diferencias entre 'va(' y 'vi(' dentro de los
límites de los paréntesis en la siguiente línea

    ...es probable que tu IDE (Entorno de desarrollo integrado) pueda...

Respuesta sugerida (Abrir con 'zo' y cerrar con 'zc') {{{
    La letra "v" no es un operador, es un comando de cambio al modo "visual"
    que aún no aprendemos y para regresar a modo normal deberás presionar
    <Esc> de la misma forma que se hace desde modo inserción.
    Dentro de los límites de los paréntesis de (Entorno ....grado), presione
    'vi(' y observe el texto seleccionado. Regrese a modo normal con <Esc>.
    Haga lo mismo con 'va('
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

Las operaciones sobre objetos de texto se pueden repetir de dos formas.
    {numero}{operador}(a|i){objetos de texto}
y
    {operador}{número}(a|i){objetos de texto}

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 2: Probar las diferencias entre '2vap' y 'v2ap'

    Consectetur quos esse quia ipsam repudiandae rerum explicabo.
    Adipisicing vitae officia et ipsa iste nemo fugiat.
    Lorem fugit error explicabo quia eos Accusantium ab
    Lorem vel nostrum illum autem laudantium Sint ratione

    Amet odio culpa sapiente soluta rerum? Earum sit
    Consectetur impedit voluptate mollitia ipsam deleniti! Ratione reprehenderit
    Elit a consequatur mollitia cum rem Dignissimos incidunt
    Consectetur sit veniam incidunt voluptatem voluptate quae corrupti?

Respuesta sugerida {{{
    Pruebe cada combinación por separado desde el primer párrafo, observe
    el resultado y salga de modo "visual" presionando <Esc>
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

Nota: Las dos formas mencionadas de repetir operaciones sobre objetos son
equivalentes. En el ejemplo anterior se observa una diferencia solamente
porque 'v' no es un operador y un prefijo numérico funciona de manera
distinta en el.

==============================================================================

Objetos de texto normales. Operan sobre un bloque más un carácter a su inicio
o a su fin dependiente del contexto.

w => Objeto "word", o "palabra pequeña". Es una serie consecutiva de símbolos
     de los listados en la opción 'iskeyword'.

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 3: Reordene la siguiente frase
    Educación es lo que olvidar tras queda lo aprendido en la escuela
   (Educación es lo que queda tras olvidar lo aprendido en la escuela)
                                            Pegar antes del carácter => P
Respuesta sugerida {{{
    Sobre la "o" de "olvidar" presiona:
        'daw'   Corta "olvidar "
        'wP'    Avanza al inicio de "tras" y pega "olvidar " antes
        'ldaw'  Corta "queda "
        bbP'    Retrocede hasta el inicio de tras y pega "queda " antes
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 4: Reordenar el texto para que tenga la estructura de una frase
del maestro Yoda
    Si tu quieres aprender vim, debes practicar mucho
   (Si aprender vim tu quieres, practicar mucho debes)
                                            Pegar después del carácter => p
Respuesta sugerida {{{
    En el espacio anterior a la "t" de "tu" presiona:
        '2daw'  Corta " tu quieres"
        'wwh'   Avanza espacio anterior a "debes"
        'daw'   Corta " debes"
        'eeP'   Llega a la "o" de "mucho" y pega el texto cortado
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 5: (Abrir con 'gf' o 'gF')
    1.6_Ejercicio5.css
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

W => Objeto "WORD", o "palabra grande". Serie de símbolos separados por un
     carácter de espacio en blanco (o una línea en blanco).

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 6: Hacer una lista de los enlaces que aparecen en el siguiente texto
en el final del párrafo.

    Si quieres hacer nada por dos minutos puede visitar
    http://www.donothingfor2minutes.com/ y si quieres liberarte de tus
    pensamientos visita http://thequietplaceproject.com/thethoughtsroom/.
    También, como oferta especial solo por hoy puede dibujar una nebulosa
    en https://29a.ch/sandbox/2011/neonflames/

    Lista de los enlaces:

                                        Operador copiar => y
                                        Comando pegar siguiente posición => p
Respuesta sugerida {{{
    Con 'autoindent' activada:
    En la línea de "lista de enlaces" teclea 'o- <Esc>' y sin moverte
    de línea repite un par de veces con punto para formar una
    pequeña lista.
    Ahora ve a recoger cada uno de los enlaces posicionándote sobre
    uno copiándolo con 'yiW' para luego regresar a la lista y pegarlo
    sobre ella con 'p'
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

s => Objeto "sentencia". Serie de símbolos terminados en '.', '!' o '?'
     seguido de espacio, tab o fin de línea.

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 7: La primera, segunda, cuarta y quinta sentencias tiene las
mayúsculas y minúsculas alternadas. Arreglelo

    sIT MOLLITIA ENIM eLIT QUIA DOLOREM
    aDIPISICING MINUS CONSEQUATUR?  sIT MAIORES VEL.
    Consectetur temporibus odit.  iPSUM VOLUPTATUM POSSIMUS.
    sIT HIC ITAQUE ARCHITECTO REM. Lorem totam magnam
                                            Operador cambiar minus/mayus => g~
Respuesta sugerida {{{
    Desde la primera sentencia: 'g~is).)).).'

     g~is     Cambia mayúsculas y minúsculas de la sentencia actual
     ).       Avanza una sentencia y repite
     )).      Avanza dos sentencias y repite
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

p => Objeto "párrafo". Serie de líneas delimitadas por una línea
     completamente en blanco.


*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 8: Ordenar los párrafos.

     c) Amet dolorem qui id veritatis quisquam? Delectus praesentium?
     Adipisicing quis hic earum nobis magnam? Laboriosam soluta
     Adipisicing veniam ipsa nisi totam ipsa necessitatibus animi
     Elit autem soluta reprehenderit exercitationem non saepe Fugiat

     b) Elit eaque mollitia nulla voluptatibus cupiditate, consequatur Optio.
     Adipisicing earum quia consequuntur exercitationem dicta Autem officia?
     Consectetur facilis soluta asperiores qui excepturi magni Aliquam.
     Lorem ipsum dolorem reprehenderit quia dolor Exercitationem temporibus

     a) Dolor eaque consequuntur voluptates illum quibusdam! Dolorem perspiciatis
     Consectetur odio labore assumenda hic ratione Iusto dolore
     Adipisicing explicabo beatae exercitationem porro nulla nostrum, laboriosam!
     Ipsum dolorem voluptatum odio sapiente tenetur ut eaque
                                                    Pegar después => p

Respuesta sugerida {{{
    Desde el primer párrafo: '2dap}pdap}p'

    2dap    Corta dos párrafos
    }p      Avanza un párrafo y pega el contenido del registro sin nombre
    dap     Corta un párrafo
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

==============================================================================

Objetos de texto por símbolos contenedores. Operan al interior de un par de
símbolos contenedores de texto, incluyendo o excluyendo dichos caracteres
respectivamente.

[ ó ] => Objeto "contenido de corchetes"

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 9: 1.6_Ejercicio9.cpp
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*


( ó ) ó b => Objeto "contenido de paréntesis"

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 10: Borrar todas las aclaraciones en paréntesis del siguiente
texto
    Dolore apeirian omnis augue minim omnis ad mei.
    Accusam viverra utroque ridens vis iriure ligula (porta altera exerci).
    Accusam (soleat philosophia placerat) nec persecuti aliquet massa probo
    te sed veniam possim vitae urna. Scripta curabitur ornare impedit eget.
    Mei postea ocurreret (assentior te meliore nam ex) sonet appetere amet ne
    iriure. Purus commodo aeque mediocrem?
                                            Borrar un solo carácter => x
Respuesta sugerida {{{
    Desde la primera línea: 'jf(da)hxj,(da)xj;(da)x'

    jf(      Bajar a la segunda línea y buscar "(" hacia adelante
    da)hx    Borra el paréntesis y un espacio a la izquierda
    j,       Baja una línea y repite búsqueda de "(" hacia atrás
    da)x     Borra el paréntesis y un espacio
    j;       Baja una línea y repite búsqueda de "(" hacia adelante
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

{ ó } ó B => Objeto "contenido de llaves"


*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 11: 1.6_Ejercicio11.sh
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*


< ó > => Objeto "contenido de paréntesis angulares"

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 12: 1.6_Ejercicio12.c
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

==============================================================================

Objetos de cadenas. Similares a los objetos por símbolos contenedores pero
solo funcionan sobre la línea actual. Tienen la propiedad especial de que
mueven el cursor hacia adelante para buscar la cadena.

' => Cadena delimitada por: '

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 13: 1.6_Ejercicio13.py
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*


" => Cadena delimitada por: "

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 14: 1.6_Ejercicio14.f90
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*


` => Cadena delimitada por: `

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 15: 1.6_Ejercicio15.js
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

==============================================================================

Objeto para manejo de lenguajes de marcado

t => Objeto "etiqueta de html/xml"

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 16: 1.6_Ejercicio16.html
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

===========================================================================

_ => El guión bajo no es un objeto de texto, sin embargo se suele comportar
     de forma similar a lo que algunos plugins interpretan como el objeto
     "línea completa"

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
Ejercicio 17: Eliminar las líneas pares de la siguiente figura

     .----------------.  .----------------.  .----------------.
    ############################################################
    | .--------------. || .--------------. || .--------------. |
    ############################################################
    | | ____   ____  | || |     _____    | || | ____    ____ | |
    ############################################################
    | ||_  _| |_  _| | || |    |_   _|   | || ||_   \  /   _|| |
    ############################################################
    | |  \ \   / /   | || |      | |     | || |  |   \/   |  | |
    ############################################################
    | |   \ \ / /    | || |      | |     | || |  | |\  /| |  | |
    ############################################################
    | |    \ ' /     | || |     _| |_    | || | _| |_\/_| |_ | |
    ############################################################
    | |     \_/      | || |    |_____|   | || ||_____||_____|| |
    ############################################################
    | |              | || |              | || |              | |
    ############################################################
    | '--------------' || '--------------' || '--------------' |
    ############################################################
     '----------------'  '----------------'  '----------------'
                                            Operador eliminar => d
                                            Aplicar operador sobre línea => _

Respuesta sugerida {{{
    Posicionese sobre la segunda línea y teclee 'd_'. Luego baje con 'j'
    y repita la edición con '.' repetidas veces hasta terminar.
}}}
*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*v*

______________________________________________________________________________
Esos son todos los objetos de texto integrados de vim, más se pueden instalar
por medio de plugins. Algunos de los mejores son:
    * https://github.com/michaeljsmith/vim-indent-object: Provee un objeto
      de texto para operar sobre líneas equivalentemente indentadas

    * https://github.com/PeterRincker/vim-argumentative: Objeto de texto para
      manejar argumentos de función o elementos de listas separadas por coma

    * https://github.com/kana/vim-textobj-function: Provee de un nuevo
      objeto de texto para operar sobre funciones completas

    * https://github.com/glts/vim-textobj-comment: Objeto de texto para
      manejar comentarios.

<----Archivo anterior                                Archivo siguiente---->
  :prev[ious]                                                     :n[ext]

vim: fdm=marker
